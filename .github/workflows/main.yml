name: Main
on:
  push:
    branches:
      - main
    tags:
      - baloney*
  issue_comment:
    types:
      - created

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: for
        run: |
          for i in {1..10}; do echo baloney; done
      - name: create
        run: |
          mkdir files
          touch files/file.txt
      - name: Archive 
        uses: actions/upload-artifact@v2
        with:
          name: files
          path: files
  download:
    needs: [ upload ]
    runs-on: ubuntu-latest
    steps:
      - name: dl 
        uses: actions/download-artifact@v2
        with:
          name: files
          path: files
      - name: ls
        run: |
          ls
  feedback-link:
    if: github.event.issue.pull_request && github.event.comment.body == 'deploy now'
    runs-on: ubuntu-latest
    steps:
      - name: Feedback link
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[Workflow started! üöÄ](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`,
            });
  get-pr-sha:
    if: github.event.issue.pull_request && github.event.comment.body == 'deploy now'
    runs-on: ubuntu-latest
    outputs:
      pr_sha: ${{ steps.sha.outputs.result }}
    steps:
      - name: fail
        run: exit 1
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      # - name: Export PR SHA
      #   run: echo "PR_SHA=${{ steps.sha.outputs.result }}" >> $GITHUB_ENV
  random-job:
    runs-on: ubuntu-latest
    outputs:
      deployed: ${{ steps.result.outputs.val }}
    needs: [get-pr-sha]
    name: main job
    steps:
      - name: echo
        run: echo this is the way
      # - name: fail
      #   run: exit 1
      - name: echo
        run: echo ${{ needs.get-pr-sha.outputs.pr_sha }}
      - id: result
        run: echo "::set-output name=val::true"
  run-action:
    runs-on: ubuntu-latest
    needs: [get-pr-sha]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.get-pr-sha.outputs.pr_sha }}
      - uses: ./.github/actions/test
        with:
          who-to-greet: "stu"
  feedback-result-to-pr:
    if: ${{ always() && github.event.issue.pull_request && github.event.comment.body == 'deploy now' }}
    runs-on: ubuntu-latest
    needs: [random-job, run-action, get-pr-sha]
    steps:
      - name: Feedback failure
        if: ${{ needs.random-job.outputs.deployed != 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment failed! ‚ùå',
            });
      - name: Feedback success
        if: ${{ needs.random-job.outputs.deployed == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment succeeded! ‚úÖ',
            });
